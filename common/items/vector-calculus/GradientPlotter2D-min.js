import GradientField2D from"../../components/vector-calculus/GradientField2D.js";import ContourPlot2D from"../../components/vector-calculus/ContourPlotOld.js";import Graph3D from"../../components/vector-calculus/Graph3D.js";const parser=math.parser();class GradientPlotter2D{constructor(t,a){this.range=a,this.fnText=t,this.params={res:50,a:1,b:1,c:1,t:0,fnText:t},this.uniforms={t:{value:this.params.t},a:{value:this.params.a},b:{value:this.params.b},c:{value:this.params.c}},this.uniformsString="\n        uniform float t;\n        uniform float a;\n        uniform float b;\n        uniform float c;\n        ";let n=parser.evaluate("fn(u,v,t,a,b,c)=".concat(this.params.fnText));this.scalarFn=function(t,a){return n(t.x,t.y,a.t,a.a,a.b,a.c)},this.gradientField=new GradientField2D(this.scalarFn,this.range),this.contourPlot=new ContourPlot2D(this.params.fnText,this.uniforms,this.uniformsString,this.range),this.contourPlot.setPosition(0,-.1,0)}addToScene(t){this.gradientField.addToScene(t),this.contourPlot.addToScene(t)}addToUI(t){let a=this,n=this.gradientField;t.add(this.params,"fnText").name("f=").onFinishChange((function(t){a.params.fnText=t,a.params.t=0;let n=parser.evaluate("fn(u,v,t,a,b,c)=".concat(t)),e=function(t,a){return n(t.x,t.y,a.t,a.a,a.b,a.c)};a.scalarFn=e,a.gradientField.setFunction(e),a.contourPlot.setFunction(t)})),t.add(this.params,"res",10,100,1).name("res").onChange((function(t){let a={x:t,y:t};n.setRes(a)}));let e=t.addFolder("Parameters");e.add(this.params,"a",-2,2,.01).name("a").onChange((function(t){a.contourPlot.uniforms.a.value=t})),e.add(this.params,"b",-2,2,.01).name("b").onChange((function(t){a.contourPlot.uniforms.b.value=t})),e.add(this.params,"c",-2,2,.01).name("c").onChange((function(t){a.contourPlot.uniforms.c.value=t}))}tick(t,a){this.params.t=t,this.contourPlot.uniforms.t.value=t,this.gradientField.update(this.params),this.contourPlot.update()}}let fn="u*v-sin(u-t)*v",range={x:{min:-10,max:10},y:{min:-10,max:10}},example=new GradientPlotter2D(fn,range);export default{example:example};
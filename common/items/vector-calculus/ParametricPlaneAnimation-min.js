import Vector from"../../components/vector-calculus/Vector.js";import ParametricSurface from"../../components/parametric/ParametricSurface";import{Vector3}from"../../../3party/three/build/three.module";let surfaceOptions={clearcoat:1,roughness:.4};const parser=math.parser();class ParametricPlaneAnimation{constructor(){this.params={ux:1,uy:0,uz:0,vx:0,vy:1,vz:0,px:1,py:1,pz:1},this.range={u:{min:-5,max:5},v:{min:-5,max:5}},this.uniforms={ux:{type:"float",value:this.params.ux},uy:{type:"float",value:this.params.uy},uz:{type:"float",value:this.params.uz},vx:{type:"float",value:this.params.vx},vy:{type:"float",value:this.params.vy},vz:{type:"float",value:this.params.vz},px:{type:"float",value:this.params.px},py:{type:"float",value:this.params.py},pz:{type:"float",value:this.params.pz}},this.planeColor="\n            vec3 colorFn(vec2 uv, vec3 xyz){\n             \n             float grid1 = (1.-pow(abs(sin(10.*3.14*uv.x)*sin(10.*3.14*uv.y)),0.1))/10.;\n             float grid2 = (1.-pow(abs(sin(50.*3.14*uv.x)*sin(50.*3.14*uv.y)),0.1))/25.;\n             float grid3 = (1.-pow(abs(sin(100.*3.14*uv.x)*sin(100.*3.14*uv.y)),0.1))/50.;\n             float grid = grid1+grid2+grid3;\n             \n             vec3 base =  0.6 + 0.4*cos(2.*3.14*uv.xyx+vec3(0,2,4));\n             \n             return base + 2.*vec3(grid);\n            }\n        ",this.plane=new ParametricSurface(this.buildEquation(),this.range,this.uniforms,this.planeColor,surfaceOptions)}buildGLSLEquation(){return"vec3 eqn( vec2 uv ){\n            vec3 u = vec3(ux,uy,uz);\n            vec3 v = vec3 (vx,vy,vz);\n            vec3 p = vec3 (px,py,pz);\n            \n            return p+uv.x*u+uv.y*v;\n       }"}buildJSEquation(){let e=parser.evaluate("xEqn(u,v,ux,vx,px)=px+ux*u+vx*v"),a=parser.evaluate("yEqn(u,v,uy,vy,py)=py+uy*u+vy*v"),t=parser.evaluate("zEqn(u,v,uz,vz,pz)=pz+uz*u+vz*v");this.eqn=function(r,u,v={ux:1,uy:0,uz:0,vx:0,vy:1,vz:0,px:1,py:1,pz:1}){let n=e(r,u,v.ux,v.vx,v.px),p=a(r,u,v.ux,v.vx,v.px),o=t(r,u,v.ux,v.vx,v.px);return new Vector3(n,p,o)}}addToScene(e){this.plane.addToScene(e)}addToUI(e){e.addFolder("Point p"),e.addFolder("Vector u"),e.addFolder("Vector v")}tick(e,a){}}let ex=new ParametricPlaneAnimation;export default{ex:ex};
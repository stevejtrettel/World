import{MeshPhysicalMaterial,DoubleSide}from"../../../3party/three/build/three.module.js";import{colorConversion}from"../../shaders/colors/colorConversion.js";import ContourPlot2D from"../../components/vector-calculus/ContourPlot2D.js";class LevelSets{constructor(){this.range={u:{min:-10,max:10},v:{min:-10,max:10}},this.params={animate:!0,slice:0,eqn:"(v*v-u*u*u+4.*u-2.)/100."},this.uniforms={slice:{type:"float",value:this.params.slice}},this.contourColor="\n        float grid(float z, float size){\n\n                float brightness = 1./(5.*sqrt(size));\n    \n                float gridPattern = abs(sin(3.14*size*z));\n    \n                //invert and increase contrast:\n                gridPattern = 1.-pow(gridPattern,0.05);\n    \n                return gridPattern*brightness;\n            }\n\n            vec3 colorFn(float z){\n            \n            float grid1 = grid(z,0.5);\n            float grid2 = grid(z,2.);\n            float grid3 = grid(z,6.);\n            float grid = grid1+grid2+grid3;\n            grid *=4.;\n                    \n            vec3 base = hsb2rgb(vec3(z/6.28,0.8,0.7-grid));\n            vec3 col = base + 2.*vec3(grid);\n             \n            if(abs(z-slice)<0.05){\n            col=vec3(0);\n            }\n            return col;\n            }\n        ",this.contour=new ContourPlot2D(this.params.eqn,this.range,this.uniforms,this.contourColor)}setSlice(n){this.params.slice=n,this.contour.update({slice:n})}addToScene(n){this.contour.addToScene(n)}addToUI(n){let t=this;n.add(t.params,"animate").name("Animate"),n.add(t.params,"eqn").name("Equation").onFinishChange((function(n){t.contour.setFunction(n)})),n.add(t.params,"slice",-5,5,.01).name("Slice").onChange((function(n){t.setSlice(n)}))}tick(n,t){if(this.params.animate){let t=5*Math.sin(n/3);this.setSlice(t)}}}let ex=new LevelSets;export default{ex:ex};